plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'
    implementation 'org.flywaydb:flyway-core:11.3.4'
    implementation 'org.jsoup:jsoup:1.19.1'
    implementation 'org.json:json:20250107'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'io.github.cdimascio:dotenv-java:3.2.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.18.3'
    runtimeOnly 'org.flywaydb:flyway-database-postgresql:11.3.4'
    implementation 'org.postgresql:postgresql'
    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    mainClass = 'com.example.backend.BackendApplication'
}