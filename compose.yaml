services:
  ai:
    build:
      context: ai
      dockerfile: Dockerfile
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - BACKEND_API_URL=${BACKEND_API_URL}
    ports:
      - "5000:5000"
    volumes:
      - ./ai:/app
    networks:
      - tarantula

  postgres-db:
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: radomDB
    ports:
      - "5432:5432"
    networks:
      - tarantula
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/radomDB
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - ARTICLE_SCHEDULER_FIXED_RATE=${ARTICLE_SCHEDULER_FIXED_RATE}
      - ARTICLE_SCHEDULER_CRON=${ARTICLE_SCHEDULER_CRON}
    ports:
      - "8080:8080"
    depends_on:
      - postgres-db
    networks:
      - tarantula

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    networks:
      - tarantula

networks:
  tarantula:

volumes:
  postgres_data:
  frontend_node_modules:
